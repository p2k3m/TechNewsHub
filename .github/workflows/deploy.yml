name: deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            infrastructure/package-lock.json
            frontend/package-lock.json

      - name: Install infrastructure dependencies
        working-directory: infrastructure
        run: npm ci

      - name: Lint infrastructure
        working-directory: infrastructure
        run: npm run lint

      - name: Build infrastructure assets
        working-directory: infrastructure
        run: npm run build

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Type check frontend
        working-directory: frontend
        run: npm run lint

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: technewshub-deploy

      - name: CDK Synth
        id: cdk-synth
        working-directory: infrastructure
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
        run: npm run synth

      - name: CDK Deploy
        if: github.ref == 'refs/heads/main'
        working-directory: infrastructure
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
        run: npm run deploy -- --require-approval never

      - name: Upload frontend to S3
        if: github.ref == 'refs/heads/main'
        env:
          DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          SITE_BUCKET: ${{ secrets.SITE_BUCKET_NAME }}
        run: |
          aws s3 sync frontend/dist s3://$SITE_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'

      - name: Smoke tests
        run: |
          echo "Smoke test placeholder - add API validation when endpoints are live"
